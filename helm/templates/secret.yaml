{{/*
AIOps-Platform Kubernetes Secret模板
文件: secret.yaml
描述: 定义敏感信息和认证配置的Secret资源
版本: 1.0.0
作者: AIOps Team
*/}}

{{- if .Values.global.secrets.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "aiops.fullname" . }}-secrets
  labels:
    {{- include "aiops.labels" . | nindent 4 }}
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # 数据库连接信息
  {{- if .Values.postgresql.auth.password }}
  postgres-password: {{ .Values.postgresql.auth.password | b64enc | quote }}
  {{- else }}
  postgres-password: {{ randAlphaNum 16 | b64enc | quote }}
  {{- end }}
  {{- if .Values.postgresql.auth.username }}
  postgres-username: {{ .Values.postgresql.auth.username | b64enc | quote }}
  {{- else }}
  postgres-username: {{ "aiops" | b64enc | quote }}
  {{- end }}
  {{- if .Values.postgresql.auth.database }}
  postgres-database: {{ .Values.postgresql.auth.database | b64enc | quote }}
  {{- else }}
  postgres-database: {{ "aiops" | b64enc | quote }}
  {{- end }}
  
  # Redis认证信息
  {{- if .Values.redis.auth.password }}
  redis-password: {{ .Values.redis.auth.password | b64enc | quote }}
  {{- else }}
  redis-password: {{ randAlphaNum 16 | b64enc | quote }}
  {{- end }}
  
  # Elasticsearch认证信息
  {{- if .Values.elasticsearch.auth.password }}
  elasticsearch-password: {{ .Values.elasticsearch.auth.password | b64enc | quote }}
  {{- else }}
  elasticsearch-password: {{ randAlphaNum 16 | b64enc | quote }}
  {{- end }}
  {{- if .Values.elasticsearch.auth.username }}
  elasticsearch-username: {{ .Values.elasticsearch.auth.username | b64enc | quote }}
  {{- else }}
  elasticsearch-username: {{ "elastic" | b64enc | quote }}
  {{- end }}
  
  # Grafana管理员密码
  {{- if .Values.grafana.adminPassword }}
  grafana-admin-password: {{ .Values.grafana.adminPassword | b64enc | quote }}
  {{- else }}
  grafana-admin-password: {{ randAlphaNum 16 | b64enc | quote }}
  {{- end }}
  grafana-admin-user: {{ .Values.grafana.adminUser | default "admin" | b64enc | quote }}
  
  # API密钥和JWT秘钥
  {{- if .Values.global.secrets.jwtSecret }}
  jwt-secret: {{ .Values.global.secrets.jwtSecret | b64enc | quote }}
  {{- else }}
  jwt-secret: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  
  {{- if .Values.global.secrets.apiKey }}
  api-key: {{ .Values.global.secrets.apiKey | b64enc | quote }}
  {{- else }}
  api-key: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  
  # Webhook认证信息
  webhook-username: {{ "alertmanager" | b64enc | quote }}
  webhook-password: {{ "webhook123" | b64enc | quote }}
  
  # SMTP配置（如果启用）
  {{- if .Values.alertmanager.config.global.smtp_auth_username }}
  smtp-username: {{ .Values.alertmanager.config.global.smtp_auth_username | b64enc | quote }}
  {{- end }}
  {{- if .Values.alertmanager.config.global.smtp_auth_password }}
  smtp-password: {{ .Values.alertmanager.config.global.smtp_auth_password | b64enc | quote }}
  {{- end }}
  
  # Slack Webhook URL（如果启用）
  {{- if .Values.alertmanager.config.slack.webhook_url }}
  slack-webhook-url: {{ .Values.alertmanager.config.slack.webhook_url | b64enc | quote }}
  {{- end }}
{{- end }}

{{- if .Values.traefik.dashboard.auth.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "aiops.fullname" . }}-traefik-auth
  labels:
    {{- include "aiops.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik
type: Opaque
data:
  {{- if .Values.traefik.dashboard.auth.users }}
  users: {{ .Values.traefik.dashboard.auth.users | b64enc | quote }}
  {{- else }}
  # 默认用户: admin/admin123 (使用htpasswd生成)
  users: {{ "admin:$2y$10$8K8BXuEd5n5K5K5K5K5K5u5K5K5K5K5K5K5K5K5K5K5K5K5K5K5K5K" | b64enc | quote }}
  {{- end }}
{{- end }}

{{- if .Values.global.tls.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "aiops.fullname" . }}-tls-ca
  labels:
    {{- include "aiops.labels" . | nindent 4 }}
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  {{- if .Values.global.tls.ca.cert }}
  tls.crt: {{ .Values.global.tls.ca.cert | b64enc | quote }}
  {{- else }}
  # 自签名CA证书（生产环境请替换为真实证书）
  tls.crt: {{ include "aiops.defaultCACert" . | b64enc | quote }}
  {{- end }}
  {{- if .Values.global.tls.ca.key }}
  tls.key: {{ .Values.global.tls.ca.key | b64enc | quote }}
  {{- else }}
  # 自签名CA私钥（生产环境请替换为真实私钥）
  tls.key: {{ include "aiops.defaultCAKey" . | b64enc | quote }}
  {{- end }}

{{- range $service := list "traefik" "grafana" "prometheus" "alertmanager" "kibana" "ai-engine" "api-gateway" }}
{{- $serviceConfig := index $.Values $service }}
{{- if and $serviceConfig.ingress.enabled $serviceConfig.ingress.tls }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "aiops.fullname" $ }}-{{ $service }}-tls
  labels:
    {{- include "aiops.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $service }}
type: kubernetes.io/tls
data:
  {{- if $serviceConfig.ingress.tls.cert }}
  tls.crt: {{ $serviceConfig.ingress.tls.cert | b64enc | quote }}
  {{- else }}
  # 自签名证书（生产环境请使用Let's Encrypt或真实证书）
  tls.crt: {{ include "aiops.defaultTLSCert" $ | b64enc | quote }}
  {{- end }}
  {{- if $serviceConfig.ingress.tls.key }}
  tls.key: {{ $serviceConfig.ingress.tls.key | b64enc | quote }}
  {{- else }}
  # 自签名私钥（生产环境请使用Let's Encrypt或真实私钥）
  tls.key: {{ include "aiops.defaultTLSKey" $ | b64enc | quote }}
  {{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- if .Values.aiEngine.secrets.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "aiops.fullname" . }}-ai-engine-secrets
  labels:
    {{- include "aiops.labels" . | nindent 4 }}
    app.kubernetes.io/component: ai-engine
type: Opaque
data:
  # AI引擎API密钥
  {{- if .Values.aiEngine.secrets.apiKey }}
  ai-api-key: {{ .Values.aiEngine.secrets.apiKey | b64enc | quote }}
  {{- else }}
  ai-api-key: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  
  # 模型加密密钥
  {{- if .Values.aiEngine.secrets.modelKey }}
  model-encryption-key: {{ .Values.aiEngine.secrets.modelKey | b64enc | quote }}
  {{- else }}
  model-encryption-key: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  
  # 外部AI服务API密钥（如OpenAI等）
  {{- if .Values.aiEngine.secrets.externalApiKey }}
  external-ai-api-key: {{ .Values.aiEngine.secrets.externalApiKey | b64enc | quote }}
  {{- end }}
  
  # 数据库连接字符串
  {{- $postgresUser := .Values.postgresql.auth.username | default "aiops" }}
  {{- $postgresPass := .Values.postgresql.auth.password | default (randAlphaNum 16) }}
  {{- $postgresDB := .Values.postgresql.auth.database | default "aiops" }}
  {{- $postgresHost := printf "%s-postgresql" (include "aiops.fullname" .) }}
  database-url: {{ printf "postgresql://%s:%s@%s:5432/%s" $postgresUser $postgresPass $postgresHost $postgresDB | b64enc | quote }}
  
  # Redis连接字符串
  {{- $redisPass := .Values.redis.auth.password | default (randAlphaNum 16) }}
  {{- $redisHost := printf "%s-redis" (include "aiops.fullname" .) }}
  redis-url: {{ printf "redis://:%s@%s:6379/0" $redisPass $redisHost | b64enc | quote }}
{{- end }}

{{- if .Values.selfHealing.secrets.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "aiops.fullname" . }}-self-healing-secrets
  labels:
    {{- include "aiops.labels" . | nindent 4 }}
    app.kubernetes.io/component: self-healing
type: Opaque
data:
  # Ansible Vault密码
  {{- if .Values.selfHealing.secrets.vaultPassword }}
  ansible-vault-password: {{ .Values.selfHealing.secrets.vaultPassword | b64enc | quote }}
  {{- else }}
  ansible-vault-password: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  
  # SSH私钥（用于连接目标主机）
  {{- if .Values.selfHealing.secrets.sshPrivateKey }}
  ssh-private-key: {{ .Values.selfHealing.secrets.sshPrivateKey | b64enc | quote }}
  {{- end }}
  
  # Kubernetes ServiceAccount Token（用于集群操作）
  {{- if .Values.selfHealing.secrets.kubeToken }}
  kube-token: {{ .Values.selfHealing.secrets.kubeToken | b64enc | quote }}
  {{- end }}
  
  # 自愈执行器API密钥
  {{- if .Values.selfHealing.secrets.apiKey }}
  self-healing-api-key: {{ .Values.selfHealing.secrets.apiKey | b64enc | quote }}
  {{- else }}
  self-healing-api-key: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
{{- end }}

{{- if .Values.monitoring.secrets.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "aiops.fullname" . }}-monitoring-secrets
  labels:
    {{- include "aiops.labels" . | nindent 4 }}
    app.kubernetes.io/component: monitoring
type: Opaque
data:
  # Prometheus远程写入认证
  {{- if .Values.monitoring.secrets.remoteWriteUsername }}
  remote-write-username: {{ .Values.monitoring.secrets.remoteWriteUsername | b64enc | quote }}
  {{- end }}
  {{- if .Values.monitoring.secrets.remoteWritePassword }}
  remote-write-password: {{ .Values.monitoring.secrets.remoteWritePassword | b64enc | quote }}
  {{- end }}
  
  # 外部监控系统集成
  {{- if .Values.monitoring.secrets.datadogApiKey }}
  datadog-api-key: {{ .Values.monitoring.secrets.datadogApiKey | b64enc | quote }}
  {{- end }}
  {{- if .Values.monitoring.secrets.newrelicLicenseKey }}
  newrelic-license-key: {{ .Values.monitoring.secrets.newrelicLicenseKey | b64enc | quote }}
  {{- end }}
{{- end }}